문자열 편집거리는 부분문자열의 편집거리

dp 는 최적성의 원리성립하는지 확인하는데에서 시작한다.

서로다른 문자열 x,y를 같게 만들기 위해 x에 할 수 있는 행동은 다음과 같다.

1)x의 마지막 글자가 y와 같거나 같게 변경되는 경우
2)x의 마지막 글자가 삭제된 경우
3)x에 y의 마지막 글자를 삽입하는 경우

총 편집비용을 계산하기 위해
x,y의 초기 길이를 각각 n, m 이라고 할때
1)의 경우 x,y 의 n-1, m-1까지의 최소 편집비용에 마지막글자의 변경 비용을 더하고
2)의 경우 n-1, m까지의 최소 편집비용에 마지막글자의 삭제 비용을 더하고
3)의 경우 n, m-1까지의 최소 편집비용에 마지막글자의 삽입비용을 더한다.

결국 이와 같이 큰 문제를 작은 여러 문제를 조합하여 해결할 수 있음을 의미하므로 principal of optimality 가 성립한다고 할 수 있다.
또한 위의 1,2,3으로부터 점화식을 이끌어 낼 수 있다. 1,2,3의 방법중 가장 작은 경우를 선택하면 되는것이다.
즉 최소거리 E(n,m)=min(E(n-1, m) + delete, E(n, m-1) + insert, E(n-1, m-1) + update)
이때, 각가의 E(a, b)를 a,b 값에 따라 미리 계산해 놓는다면 불필요하게 추가로 계산하는 경우없이 계산을 수행 할 수 있을 것이다.
즉 재귀적으로 3의 degree로 나뉘는 dfs구조에서 
